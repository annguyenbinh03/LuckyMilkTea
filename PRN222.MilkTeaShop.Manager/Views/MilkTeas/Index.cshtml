@model IEnumerable<PRN222.MilkTeaShop.Repository.Models.Product>

@{
	ViewData["Title"] = "Index";
	ViewData["HeaderTitle"] = "MilkTea";
	Layout = "~/Views/Shared/_ManagerLayout.cshtml";
	int totalPages = (int)Math.Ceiling((double)ViewBag.TotalItems / ViewBag.PageSize);
	int currentPage = ViewBag.CurrentPage;
	string search = ViewBag.Search ?? "";
}


<form class="mt-3" method="get" action="@Url.Action("Index")">
	<div class="d-flex justify-content-between">
		<div>
			<input class="rounded h-100 ps-2" value="@search" placeholder="Search by name" />
			<button class="btn btn-primary px-3 ms-2" type="submit">Apply</button>
		</div>	
		<div>
			<a class="btn btn-success" asp-action="Create">Create New</a>
		</div>
	</div>
</form>

<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.First().Name)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.First().Description)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.First().Price)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.First().Status)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.First().UpdatedAt)
			</th>
			<th>
				Actions
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					<img class="rounded me-2" width="60px" src="@item.ImageUrl" />

					@Html.DisplayFor(modelItem => item.Name)
				</td>
				<td style="max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
					@Html.DisplayFor(modelItem => item.Description)
				</td>
				<td>
					@foreach (var productSize in item.ProductSizes)
					{
						<span>
							@productSize.Size.Name: @(((int)productSize.Price).ToString("N0")) VND
						</span>
						<br />
					}
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Status)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.UpdatedAt)
				</td>
				<td>
					@*   <a asp-action="./Edit" asp-route-id="@item.Id">Edit</a> |
				<a asp-action="./Delete" asp-route-id="@item.Id">Delete</a> *@
				</td>
			</tr>
		}
	</tbody>
</table>

<!-- Hiển thị nút phân trang -->
<div class="pagination justify-content-center">
	@if (totalPages > 1)
	{
		<ul class="pagination">
			@if (currentPage > 1)
			{
				<li class="page-item">
					<a class="page-link" href="@Url.Action("Index", new { page = 1, search})">First</a>
				</li>
				<li class="page-item">
					<a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1})">Previous</a>
				</li>
			}

			@for (int i = 1; i <= totalPages; i++)
			{
				<li class="page-item @(i == currentPage ? "active" : "")">
					<a class="page-link" href="@Url.Action("Index", new { page = i,  search})">@i</a>
				</li>
			}

			@if (currentPage < totalPages)
			{
				<li class="page-item">
					<a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1,  search})">Next</a>
				</li>
				<li class="page-item">
					<a class="page-link" href="@Url.Action("Index", new { page = totalPages,  search})">Last</a>
				</li>
			}
		</ul>
	}
</div>
</div>